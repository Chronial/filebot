<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<project name="FileBot" default="jar">

	<property name="title" value="${ant.project.name}" />
	<property name="version" value="1.9" />

	<tstamp>
		<format property="today" pattern="yyyy-MM-dd" />
	</tstamp>

	<property name="dir.source" location="${basedir}/source" />
	<property name="dir.test" location="${basedir}/test" />
	<property name="dir.build" location="${basedir}/build" />
	<property name="dir.dist" location="${basedir}/dist" />
	<property name="dir.lib" location="${basedir}/lib" />


	<target name="jar" depends="build">
		<!-- create dist dir -->
		<mkdir dir="${dir.dist}" />

		<!-- main jar -->
		<jar destfile="${dir.dist}/filebot.jar">
			<fileset dir="${dir.build}" excludes="**/*Test*" />
		</jar>

		<!-- extra jar containing all the unit tests -->
		<jar destfile="${dir.dist}/filebot-test.jar">
			<fileset dir="${dir.build}" includes="**/*Test*" />
		</jar>

		<!-- source zip -->
		<zip destfile="${dir.dist}/filebot-${version}-src.zip">
			<fileset dir="source" />
			<fileset dir="test" />
		</zip>
	</target>


	<target name="fatjar" depends="jar">
		<!-- create dist/fatjar dir -->
		<mkdir dir="${dir.dist}/fatjar" />

		<jar destfile="${dir.dist}/fatjar/FileBot_${version}.jar" filesetmanifest="merge" duplicate="fail">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Built-Date" value="${today}" />
				<attribute name="Application-Name" value="${title}" />
				<attribute name="Application-Version" value="${version}" />
				<attribute name="Main-Class" value="net.sourceforge.filebot.Main" />
			</manifest>

			<!-- include main jar -->
			<zipfileset src="${dir.dist}/filebot.jar" />

			<!-- include libs -->
			<zipfileset src="${dir.lib}/xercesImpl.jar">
				<include name="org/apache/**" />
				<include name="org/w3c/dom/html/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/nekohtml.jar">
				<include name="org/cyberneko/html/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/simmetrics.jar">
				<include name="uk/ac/shef/wit/simmetrics/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/glazedlists.jar">
				<include name="ca/odell/glazedlists/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/miglayout.jar">
				<include name="net/miginfocom/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/xmlrpc-client.jar">
				<include name="redstone/xmlrpc/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/args4j.jar">
				<include name="org/kohsuke/args4j/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/ehcache.jar">
				<include name="net/sf/ehcache/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/jna.jar">
				<!-- include classes and native libraries -->
				<include name="com/sun/jna/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/js-engine.jar">
				<include name="com/sun/phobos/script/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/js.jar">
				<include name="org/mozilla/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/sublight-ws.jar">
				<include name="net/sublight/webservice/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/junrar-custom.jar">
				<include name="de/innosystec/unrar/**" />
			</zipfileset>

			<zipfileset src="${dir.lib}/commons-logging.jar">
				<include name="org/apache/commons/logging/**" />
			</zipfileset>
		</jar>
	</target>


	<target name="webstart" depends="jar">
		<!-- create dirs -->
		<mkdir dir="${dir.dist}/webstart" />

		<!-- copy jars -->
		<copy todir="${dir.dist}/webstart">
			<fileset dir="${dir.dist}" includes="filebot.jar" />
			<fileset dir="${dir.lib}" includes="*.jar" excludes="junit.jar, jna.jar" />
		</copy>

		<!-- copy jna.jar without native libs -->
		<jar destfile="${dir.dist}/webstart/jna.jar">
			<zipfileset src="${dir.lib}/jna.jar" includes="**/*.class" />
		</jar>

		<!-- create native lib jars -->
		<antcall target="webstart-nativelib">
			<param name="arch" value="win32-x86" />
		</antcall>
		<antcall target="webstart-nativelib">
			<param name="arch" value="win32-amd64" />
		</antcall>
		<antcall target="webstart-nativelib">
			<param name="arch" value="linux-i386" />
		</antcall>
		<antcall target="webstart-nativelib">
			<param name="arch" value="linux-amd64" />
		</antcall>
		<antcall target="webstart-nativelib">
			<param name="arch" value="darwin" />
		</antcall>

		<!-- sign main jar and native lib jars -->
		<fileset id="signjar" dir="${dir.dist}/webstart" includes="filebot.jar, native/*.jar" />
		<apply executable="pack200">
			<arg line="--repack" />
			<srcfile />
			<fileset refid="signjar" />
		</apply>
		<signjar alias="filebot" keystore="filebot.keystore" storepass="secret">
			<fileset refid="signjar" />
		</signjar>

		<!-- pack200 all jars -->
		<apply executable="pack200" dest="${dir.dist}/webstart">
			<targetfile />
			<srcfile />
			<fileset dir="${dir.dist}/webstart" includes="*.jar" />
			<mapper type="glob" from="*.jar" to="*.jar.pack.gz" />
		</apply>
	</target>


	<target name="webstart-nativelib">
		<!-- create temp dir -->
		<mkdir dir="${dir.dist}/webstart/native/${arch}" />

		<!-- copy native libs to temp dir -->
		<copy todir="${dir.dist}/webstart/native/${arch}" flatten="true">
			<zipfileset src="${dir.lib}/jna.jar" includes="com/sun/jna/${arch}/*" />
			<fileset dir="${dir.lib}/native" includes="${arch}/*" />
		</copy>

		<!-- create native lib jar -->
		<jar destfile="${dir.dist}/webstart/native/${arch}.jar" basedir="${dir.dist}/webstart/native/${arch}" />

		<!-- delete temp dir -->
		<delete dir="${dir.dist}/webstart/native/${arch}" />
	</target>


	<target name="genkey">
		<genkey alias="filebot" keystore="filebot.keystore" storepass="secret" validity="3650" dname="CN=${user.name}" />
	</target>


	<target name="build">
		<!-- create build dir -->
		<mkdir dir="${dir.build}" />

		<!-- compile -->
		<javac srcdir="${dir.source}:${dir.test}" destdir="${dir.build}" source="1.6" encoding="utf-8">
			<classpath>
				<fileset dir="${dir.lib}" includes="*.jar" />
			</classpath>
		</javac>

		<!-- copy resources -->
		<copy todir="${dir.build}">
			<fileset dir="${dir.source}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>


	<target name="clean">
		<delete dir="${dir.dist}" />
		<delete dir="${dir.build}" />
	</target>


	<target name="test" depends="jar">
		<junit printsummary="yes" fork="true">
			<classpath>
				<fileset dir="${dir.dist}" includes="*.jar" />
				<fileset dir="${dir.lib}" includes="*.jar" />
			</classpath>

			<formatter type="plain" />

			<test name="net.sourceforge.filebot.AllTests" outfile="test-report" />
		</junit>
	</target>


	<target name="test-fatjar" depends="fatjar">
		<junit printsummary="yes" fork="true">
			<classpath>
				<pathelement location="${dir.dist}/fatjar/FileBot.jar" />
				<pathelement location="${dir.dist}/filebot-test.jar" />
				<pathelement location="${dir.lib}/junit.jar" />
			</classpath>

			<formatter type="plain" />

			<test name="net.sourceforge.filebot.AllTests" outfile="test-report" />
		</junit>
	</target>


	<target name="run-fatjar" depends="fatjar">
		<java jar="${dir.dist}/fatjar/FileBot.jar" fork="true" />
	</target>

</project>
